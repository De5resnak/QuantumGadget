# Generated by Django 5.1.1 on 2024-11-24 16:25

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('washing_machine', 'Стиральная машина'), ('tv', 'Телевизор'), ('cleaning_equipment', 'Техника для уборки'), ('dishwasher', 'Посудомоечная машина')], max_length=50, verbose_name='Тип техники')),
                ('trending', models.BooleanField(default=False, verbose_name='Популярное')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('brand', models.CharField(max_length=255, verbose_name='Бренд')),
                ('short_description', models.TextField(verbose_name='Короткое описание')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Стоимость')),
                ('in_stock', models.BooleanField(default=True, verbose_name='В наличии на складе')),
                ('material', models.CharField(max_length=255, verbose_name='Материал')),
                ('weight', models.FloatField(verbose_name='Вес (кг)')),
                ('full_description', models.TextField(verbose_name='Полное описание')),
                ('power', models.CharField(max_length=50, verbose_name='Мощность')),
                ('size', models.CharField(max_length=50, verbose_name='Размер')),
                ('diagonal', models.CharField(blank=True, max_length=50, null=True, verbose_name='Диагональ')),
                ('warranty_period', models.CharField(max_length=50, verbose_name='Время гарантии')),
                ('max_spin_speed', models.CharField(blank=True, max_length=50, null=True, verbose_name='Максимальная скорость отжима')),
                ('number_of_programs', models.CharField(blank=True, max_length=50, null=True, verbose_name='Количество программ')),
                ('voltage_protection', models.CharField(blank=True, max_length=50, null=True, verbose_name='Защита от скачков напряжения')),
                ('energy_efficiency_class', models.CharField(blank=True, max_length=50, null=True, verbose_name='Класс энергопотребления')),
                ('screen_resolution', models.CharField(blank=True, max_length=50, null=True, verbose_name='Разрешение экрана')),
                ('smart_tv_support', models.CharField(blank=True, max_length=50, null=True, verbose_name='Поддержка SmartTV')),
                ('refresh_rate', models.CharField(blank=True, max_length=50, null=True, verbose_name='Частота обновления экрана')),
                ('dustbin_capacity', models.CharField(blank=True, max_length=50, null=True, verbose_name='Ёмкость пылесборника')),
                ('dustbin_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Тип пылесборника')),
                ('suction_power', models.CharField(blank=True, max_length=50, null=True, verbose_name='Мощность всасывания')),
                ('overheat_protection', models.CharField(blank=True, max_length=50, null=True, verbose_name='Защита от перегрева')),
                ('water_consumption_per_cycle', models.CharField(blank=True, max_length=50, null=True, verbose_name='Расход воды за цикл')),
                ('leak_protection', models.CharField(blank=True, max_length=50, null=True, verbose_name='Защита от протечек')),
                ('max_water_temperature', models.CharField(blank=True, max_length=50, null=True, verbose_name='Максимальная температура воды')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/images/', verbose_name='Изображение')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='Catalog.product', verbose_name='Продукт')),
            ],
        ),
    ]
